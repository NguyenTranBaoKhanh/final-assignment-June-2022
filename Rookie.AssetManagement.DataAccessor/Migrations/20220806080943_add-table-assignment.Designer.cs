// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rookie.AssetManagement.DataAccessor.Data;

#nullable disable

namespace Rookie.AssetManagement.DataAccessor.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220806080943_add-table-assignment")]
    partial class addtableassignment
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "e20ec457-677e-4d0e-be75-90e5be567bbf",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "bfbd3bc4-c737-4944-9a99-18a05d1ece06",
                            Name = "Staff",
                            NormalizedName = "STAFF"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("Rookie.AssetManagement.DataAccessor.Entities.Asset", b =>
                {
                    b.Property<string>("AssetCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("AssetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AssetState")
                        .HasColumnType("int");

                    b.Property<string>("CategoryID")
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("InstalledDay")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LocationID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Specification")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AssetCode");

                    b.HasIndex("CategoryID");

                    b.HasIndex("LocationID");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            AssetCode = "PC000001",
                            AssetName = "Dell OptiPlex 3050 Micro",
                            AssetState = 2,
                            CategoryID = "PC",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "CPU: 7th Generation Intel Core i3-7100T, Graphics: Intel HD Graphics, RAM: 4GB, Storage: 500GB HDD"
                        },
                        new
                        {
                            AssetCode = "PC000002",
                            AssetName = "Dell OptiPlex 3050 Micro",
                            AssetState = 2,
                            CategoryID = "PC",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "CPU: 7th Generation Intel Core i3-7100T, Graphics: Intel HD Graphics, RAM: 4GB, Storage: 500GB HDD"
                        },
                        new
                        {
                            AssetCode = "PC000003",
                            AssetName = "Dell OptiPlex 3050 Micro",
                            AssetState = 2,
                            CategoryID = "PC",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "CPU: 7th Generation Intel Core i3-7100T, Graphics: Intel HD Graphics, RAM: 4GB, Storage: 500GB HDD"
                        },
                        new
                        {
                            AssetCode = "PC000004",
                            AssetName = "Dell OptiPlex 3050 Micro",
                            AssetState = 2,
                            CategoryID = "PC",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "CPU: 7th Generation Intel Core i3-7100T, Graphics: Intel HD Graphics, RAM: 4GB, Storage: 500GB HDD"
                        },
                        new
                        {
                            AssetCode = "PC000005",
                            AssetName = "Dell OptiPlex 3050 Micro",
                            AssetState = 2,
                            CategoryID = "PC",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "CPU: 7th Generation Intel Core i3-7100T, Graphics: Intel HD Graphics, RAM: 4GB, Storage: 500GB HDD"
                        },
                        new
                        {
                            AssetCode = "PC000006",
                            AssetName = "Apple iMac Pro",
                            AssetState = 2,
                            CategoryID = "PC",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "CPU: Intel Xeon W, Graphics: AMD Vega 56, Vega 64RAM: 32GB, 64GBStorage: 1TB SSD"
                        },
                        new
                        {
                            AssetCode = "PC000007",
                            AssetName = "Apple iMac Pro",
                            AssetState = 2,
                            CategoryID = "PC",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "CPU: Intel Xeon W, Graphics: AMD Vega 56, Vega 64RAM: 32GB, 64GBStorage: 1TB SSD"
                        },
                        new
                        {
                            AssetCode = "PC000008",
                            AssetName = "Apple iMac Pro",
                            AssetState = 2,
                            CategoryID = "PC",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "CPU: Intel Xeon W, Graphics: AMD Vega 56, Vega 64RAM: 32GB, 64GBStorage: 1TB SSD"
                        },
                        new
                        {
                            AssetCode = "PC000009",
                            AssetName = "Apple iMac Pro",
                            AssetState = 2,
                            CategoryID = "PC",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "CPU: Intel Xeon W, Graphics: AMD Vega 56, Vega 64RAM: 32GB, 64GBStorage: 1TB SSD"
                        },
                        new
                        {
                            AssetCode = "PC000010",
                            AssetName = "Apple iMac Pro",
                            AssetState = 2,
                            CategoryID = "PC",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "CPU: Intel Xeon W, Graphics: AMD Vega 56, Vega 64RAM: 32GB, 64GBStorage: 1TB SSD"
                        },
                        new
                        {
                            AssetCode = "PC000011",
                            AssetName = "Dell OptiPlex 3050 Micro",
                            AssetState = 2,
                            CategoryID = "PC",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "CPU: 7th Generation Intel Core i3-7100T, Graphics: Intel HD Graphics, RAM: 4GB, Storage: 500GB HDD"
                        },
                        new
                        {
                            AssetCode = "PC000012",
                            AssetName = "Dell OptiPlex 3050 Micro",
                            AssetState = 1,
                            CategoryID = "PC",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "CPU: 7th Generation Intel Core i3-7100T, Graphics: Intel HD Graphics, RAM: 4GB, Storage: 500GB HDD"
                        },
                        new
                        {
                            AssetCode = "PC000013",
                            AssetName = "Dell OptiPlex 3050 Micro",
                            AssetState = 2,
                            CategoryID = "PC",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "CPU: 7th Generation Intel Core i3-7100T, Graphics: Intel HD Graphics, RAM: 4GB, Storage: 500GB HDD"
                        },
                        new
                        {
                            AssetCode = "PC000014",
                            AssetName = "Dell OptiPlex 3050 Micro",
                            AssetState = 2,
                            CategoryID = "PC",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "CPU: 7th Generation Intel Core i3-7100T, Graphics: Intel HD Graphics, RAM: 4GB, Storage: 500GB HDD"
                        },
                        new
                        {
                            AssetCode = "PC000015",
                            AssetName = "Dell OptiPlex 3050 Micro",
                            AssetState = 2,
                            CategoryID = "PC",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "CPU: 7th Generation Intel Core i3-7100T, Graphics: Intel HD Graphics, RAM: 4GB, Storage: 500GB HDD"
                        },
                        new
                        {
                            AssetCode = "PC000016",
                            AssetName = "Apple iMac Pro",
                            AssetState = 1,
                            CategoryID = "PC",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "CPU: Intel Xeon W, Graphics: AMD Vega 56, Vega 64RAM: 32GB, 64GBStorage: 1TB SSD"
                        },
                        new
                        {
                            AssetCode = "PC000017",
                            AssetName = "Apple iMac Pro",
                            AssetState = 2,
                            CategoryID = "PC",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "CPU: Intel Xeon W, Graphics: AMD Vega 56, Vega 64RAM: 32GB, 64GBStorage: 1TB SSD"
                        },
                        new
                        {
                            AssetCode = "PC000018",
                            AssetName = "Apple iMac Pro",
                            AssetState = 1,
                            CategoryID = "PC",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "CPU: Intel Xeon W, Graphics: AMD Vega 56, Vega 64RAM: 32GB, 64GBStorage: 1TB SSD"
                        },
                        new
                        {
                            AssetCode = "PC000019",
                            AssetName = "Apple iMac Pro",
                            AssetState = 1,
                            CategoryID = "PC",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "CPU: Intel Xeon W, Graphics: AMD Vega 56, Vega 64RAM: 32GB, 64GBStorage: 1TB SSD"
                        },
                        new
                        {
                            AssetCode = "PC000020",
                            AssetName = "Apple iMac Pro",
                            AssetState = 2,
                            CategoryID = "PC",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "CPU: Intel Xeon W, Graphics: AMD Vega 56, Vega 64RAM: 32GB, 64GBStorage: 1TB SSD"
                        },
                        new
                        {
                            AssetCode = "LA000001",
                            AssetName = "Laptop Apple MacBook Pro M1",
                            AssetState = 2,
                            CategoryID = "LA",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "Apple M1, RAM 8GB, SSD 256GB"
                        },
                        new
                        {
                            AssetCode = "LA000002",
                            AssetName = "Laptop Apple MacBook Pro M1",
                            AssetState = 2,
                            CategoryID = "LA",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "Apple M1, RAM 8GB, SSD 256GB"
                        },
                        new
                        {
                            AssetCode = "LA000003",
                            AssetName = "Laptop Apple MacBook Pro M1",
                            AssetState = 2,
                            CategoryID = "LA",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "Apple M1, RAM 8GB, SSD 256GB"
                        },
                        new
                        {
                            AssetCode = "LA000004",
                            AssetName = "Laptop Dell XPS 13 9310",
                            AssetState = 2,
                            CategoryID = "LA",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "Intel Core i7 Tiger Lake 1165G7, RAM 16GB LPDDR4X, SSD 1 TB M.2 PCIe"
                        },
                        new
                        {
                            AssetCode = "LA000005",
                            AssetName = "Laptop Dell XPS 13 9310",
                            AssetState = 1,
                            CategoryID = "LA",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "Intel Core i7 Tiger Lake 1165G7, RAM 16GB LPDDR4X, SSD 1 TB M.2 PCIe"
                        },
                        new
                        {
                            AssetCode = "LA000006",
                            AssetName = "Laptop Dell XPS 13 9310",
                            AssetState = 5,
                            CategoryID = "LA",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "Intel Core i7 Tiger Lake 1165G7, RAM 16GB LPDDR4X, SSD 1 TB M.2 PCIe"
                        },
                        new
                        {
                            AssetCode = "LA000007",
                            AssetName = "Laptop HP Pavilion 15",
                            AssetState = 1,
                            CategoryID = "LA",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "Intel Core i5 Tiger Lake 1135G7,  RAM 8GB DDR4, SSD 512 GB NVMe PCIe"
                        },
                        new
                        {
                            AssetCode = "LA000008",
                            AssetName = "Laptop HP Pavilion 15",
                            AssetState = 1,
                            CategoryID = "LA",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "Intel Core i5 Tiger Lake 1135G7,  RAM 8GB DDR4, SSD 512 GB NVMe PCIe"
                        },
                        new
                        {
                            AssetCode = "LA000009",
                            AssetName = "Laptop HP Pavilion 15",
                            AssetState = 2,
                            CategoryID = "LA",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "Intel Core i5 Tiger Lake 1135G7,  RAM 8GB DDR4, SSD 512 GB NVMe PCIe"
                        },
                        new
                        {
                            AssetCode = "LA000010",
                            AssetName = "Laptop HP Pavilion 15",
                            AssetState = 1,
                            CategoryID = "LA",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "Intel Core i5 Tiger Lake 1135G7,  RAM 8GB DDR4, SSD 512 GB NVMe PCIe"
                        },
                        new
                        {
                            AssetCode = "LA000011",
                            AssetName = "Laptop Apple MacBook Pro M1",
                            AssetState = 2,
                            CategoryID = "LA",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "Apple M1, RAM 8GB, SSD 256GB"
                        },
                        new
                        {
                            AssetCode = "LA000012",
                            AssetName = "Laptop Apple MacBook Pro M1",
                            AssetState = 2,
                            CategoryID = "LA",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "Apple M1, RAM 8GB, SSD 256GB"
                        },
                        new
                        {
                            AssetCode = "LA000013",
                            AssetName = "Laptop Apple MacBook Pro M1",
                            AssetState = 2,
                            CategoryID = "LA",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "Apple M1, RAM 8GB, SSD 256GB"
                        },
                        new
                        {
                            AssetCode = "LA000014",
                            AssetName = "Laptop Dell XPS 13 9310",
                            AssetState = 2,
                            CategoryID = "LA",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "Intel Core i7 Tiger Lake 1165G7, RAM 16GB LPDDR4X, SSD 1 TB M.2 PCIe"
                        },
                        new
                        {
                            AssetCode = "LA000015",
                            AssetName = "Laptop Dell XPS 13 9310",
                            AssetState = 1,
                            CategoryID = "LA",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "Intel Core i7 Tiger Lake 1165G7, RAM 16GB LPDDR4X, SSD 1 TB M.2 PCIe"
                        },
                        new
                        {
                            AssetCode = "LA000016",
                            AssetName = "Laptop Dell XPS 13 9310",
                            AssetState = 5,
                            CategoryID = "LA",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "Intel Core i7 Tiger Lake 1165G7, RAM 16GB LPDDR4X, SSD 1 TB M.2 PCIe"
                        },
                        new
                        {
                            AssetCode = "LA000017",
                            AssetName = "Laptop HP Pavilion 15",
                            AssetState = 1,
                            CategoryID = "LA",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "Intel Core i5 Tiger Lake 1135G7,  RAM 8GB DDR4, SSD 512 GB NVMe PCIe"
                        },
                        new
                        {
                            AssetCode = "LA000018",
                            AssetName = "Laptop HP Pavilion 15",
                            AssetState = 1,
                            CategoryID = "LA",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "Intel Core i5 Tiger Lake 1135G7,  RAM 8GB DDR4, SSD 512 GB NVMe PCIe"
                        },
                        new
                        {
                            AssetCode = "LA000019",
                            AssetName = "Laptop HP Pavilion 15",
                            AssetState = 2,
                            CategoryID = "LA",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "Intel Core i5 Tiger Lake 1135G7,  RAM 8GB DDR4, SSD 512 GB NVMe PCIe"
                        },
                        new
                        {
                            AssetCode = "LA000020",
                            AssetName = "Laptop HP Pavilion 15",
                            AssetState = 1,
                            CategoryID = "LA",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "Intel Core i5 Tiger Lake 1135G7,  RAM 8GB DDR4, SSD 512 GB NVMe PCIe"
                        },
                        new
                        {
                            AssetCode = "MO000001",
                            AssetName = "Monitor Dell UltraSharp",
                            AssetState = 2,
                            CategoryID = "MO",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "4K, QHD & ultra-high-definition (UHD) monitors"
                        },
                        new
                        {
                            AssetCode = "MO000002",
                            AssetName = "Monitor Dell UltraSharp",
                            AssetState = 2,
                            CategoryID = "MO",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "4K, QHD & ultra-high-definition (UHD) monitors"
                        },
                        new
                        {
                            AssetCode = "MO000003",
                            AssetName = "Monitor Dell UltraSharp",
                            AssetState = 1,
                            CategoryID = "MO",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "4K, QHD & ultra-high-definition (UHD) monitors"
                        },
                        new
                        {
                            AssetCode = "MO000004",
                            AssetName = "Monitor Dell UltraSharp",
                            AssetState = 2,
                            CategoryID = "MO",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "4K, QHD & ultra-high-definition (UHD) monitors"
                        },
                        new
                        {
                            AssetCode = "MO000005",
                            AssetName = "Monitor Dell UltraSharp",
                            AssetState = 2,
                            CategoryID = "MO",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "4K, QHD & ultra-high-definition (UHD) monitors"
                        },
                        new
                        {
                            AssetCode = "MO000006",
                            AssetName = "Asus Designo Curve",
                            AssetState = 2,
                            CategoryID = "MO",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "Resolution: 3,840 x 1,600px. Brightness: 300 cd/m2"
                        },
                        new
                        {
                            AssetCode = "MO000007",
                            AssetName = "Asus Designo Curve",
                            AssetState = 1,
                            CategoryID = "MO",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "Resolution: 3,840 x 1,600px. Brightness: 300 cd/m3"
                        },
                        new
                        {
                            AssetCode = "MO000008",
                            AssetName = "Asus Designo Curve",
                            AssetState = 2,
                            CategoryID = "MO",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "Resolution: 3,840 x 1,600px. Brightness: 300 cd/m4"
                        },
                        new
                        {
                            AssetCode = "MO000009",
                            AssetName = "Asus Designo Curve",
                            AssetState = 1,
                            CategoryID = "MO",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "Resolution: 3,840 x 1,600px. Brightness: 300 cd/m5"
                        },
                        new
                        {
                            AssetCode = "MO000010",
                            AssetName = "Asus Designo Curve",
                            AssetState = 1,
                            CategoryID = "MO",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HCM",
                            Specification = "Resolution: 3,840 x 1,600px. Brightness: 300 cd/m6"
                        },
                        new
                        {
                            AssetCode = "MO000011",
                            AssetName = "Monitor Dell UltraSharp",
                            AssetState = 3,
                            CategoryID = "MO",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "4K, QHD & ultra-high-definition (UHD) monitors"
                        },
                        new
                        {
                            AssetCode = "MO000012",
                            AssetName = "Monitor Dell UltraSharp",
                            AssetState = 1,
                            CategoryID = "MO",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "4K, QHD & ultra-high-definition (UHD) monitors"
                        },
                        new
                        {
                            AssetCode = "MO000013",
                            AssetName = "Monitor Dell UltraSharp",
                            AssetState = 1,
                            CategoryID = "MO",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "4K, QHD & ultra-high-definition (UHD) monitors"
                        },
                        new
                        {
                            AssetCode = "MO000014",
                            AssetName = "Monitor Dell UltraSharp",
                            AssetState = 1,
                            CategoryID = "MO",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "4K, QHD & ultra-high-definition (UHD) monitors"
                        },
                        new
                        {
                            AssetCode = "MO000015",
                            AssetName = "Monitor Dell UltraSharp",
                            AssetState = 1,
                            CategoryID = "MO",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "4K, QHD & ultra-high-definition (UHD) monitors"
                        },
                        new
                        {
                            AssetCode = "MO000016",
                            AssetName = "Asus Designo Curve",
                            AssetState = 5,
                            CategoryID = "MO",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "Resolution: 3,840 x 1,600px. Brightness: 300 cd/m2"
                        },
                        new
                        {
                            AssetCode = "MO000017",
                            AssetName = "Asus Designo Curve",
                            AssetState = 1,
                            CategoryID = "MO",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "Resolution: 3,840 x 1,600px. Brightness: 300 cd/m3"
                        },
                        new
                        {
                            AssetCode = "MO000018",
                            AssetName = "Asus Designo Curve",
                            AssetState = 1,
                            CategoryID = "MO",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "Resolution: 3,840 x 1,600px. Brightness: 300 cd/m4"
                        },
                        new
                        {
                            AssetCode = "MO000019",
                            AssetName = "Asus Designo Curve",
                            AssetState = 1,
                            CategoryID = "MO",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "Resolution: 3,840 x 1,600px. Brightness: 300 cd/m5"
                        },
                        new
                        {
                            AssetCode = "MO000020",
                            AssetName = "Asus Designo Curve",
                            AssetState = 1,
                            CategoryID = "MO",
                            InstalledDay = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationID = "HN",
                            Specification = "Resolution: 3,840 x 1,600px. Brightness: 300 cd/m6"
                        });
                });

            modelBuilder.Entity("Rookie.AssetManagement.DataAccessor.Entities.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AssetCode")
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("AssignedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AssignedToUserId")
                        .HasColumnType("int");

                    b.Property<int>("AssignmentState")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssetCode");

                    b.HasIndex("AssignedByUserId");

                    b.HasIndex("AssignedToUserId");

                    b.ToTable("Assignments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssetCode = "LA000001",
                            AssignedByUserId = 1,
                            AssignedDate = new DateTime(2022, 8, 5, 15, 9, 43, 356, DateTimeKind.Local).AddTicks(3696),
                            AssignedToUserId = 2,
                            AssignmentState = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            AssetCode = "LA000002",
                            AssignedByUserId = 1,
                            AssignedDate = new DateTime(2022, 8, 5, 15, 9, 43, 356, DateTimeKind.Local).AddTicks(3709),
                            AssignedToUserId = 2,
                            AssignmentState = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            AssetCode = "LA000003",
                            AssignedByUserId = 1,
                            AssignedDate = new DateTime(2022, 8, 5, 15, 9, 43, 356, DateTimeKind.Local).AddTicks(3710),
                            AssignedToUserId = 2,
                            AssignmentState = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            AssetCode = "LA000004",
                            AssignedByUserId = 1,
                            AssignedDate = new DateTime(2022, 8, 5, 15, 9, 43, 356, DateTimeKind.Local).AddTicks(3712),
                            AssignedToUserId = 2,
                            AssignmentState = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 5,
                            AssetCode = "LA000005",
                            AssignedByUserId = 1,
                            AssignedDate = new DateTime(2022, 8, 5, 15, 9, 43, 356, DateTimeKind.Local).AddTicks(3712),
                            AssignedToUserId = 3,
                            AssignmentState = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 6,
                            AssetCode = "MO000001",
                            AssignedByUserId = 1,
                            AssignedDate = new DateTime(2022, 8, 5, 15, 9, 43, 356, DateTimeKind.Local).AddTicks(3713),
                            AssignedToUserId = 3,
                            AssignmentState = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 7,
                            AssetCode = "MO000002",
                            AssignedByUserId = 1,
                            AssignedDate = new DateTime(2022, 8, 5, 15, 9, 43, 356, DateTimeKind.Local).AddTicks(3714),
                            AssignedToUserId = 3,
                            AssignmentState = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 8,
                            AssetCode = "MO000003",
                            AssignedByUserId = 1,
                            AssignedDate = new DateTime(2022, 8, 5, 15, 9, 43, 356, DateTimeKind.Local).AddTicks(3715),
                            AssignedToUserId = 3,
                            AssignmentState = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 9,
                            AssetCode = "MO000004",
                            AssignedByUserId = 1,
                            AssignedDate = new DateTime(2022, 8, 5, 15, 9, 43, 356, DateTimeKind.Local).AddTicks(3716),
                            AssignedToUserId = 3,
                            AssignmentState = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 10,
                            AssetCode = "MO000005",
                            AssignedByUserId = 1,
                            AssignedDate = new DateTime(2022, 8, 5, 15, 9, 43, 356, DateTimeKind.Local).AddTicks(3716),
                            AssignedToUserId = 3,
                            AssignmentState = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 11,
                            AssetCode = "PC000001",
                            AssignedByUserId = 4,
                            AssignedDate = new DateTime(2022, 8, 5, 15, 9, 43, 356, DateTimeKind.Local).AddTicks(3717),
                            AssignedToUserId = 2,
                            AssignmentState = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 12,
                            AssetCode = "PC000002",
                            AssignedByUserId = 1,
                            AssignedDate = new DateTime(2022, 8, 5, 15, 9, 43, 356, DateTimeKind.Local).AddTicks(3718),
                            AssignedToUserId = 4,
                            AssignmentState = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 13,
                            AssetCode = "PC000003",
                            AssignedByUserId = 1,
                            AssignedDate = new DateTime(2022, 8, 5, 15, 9, 43, 356, DateTimeKind.Local).AddTicks(3719),
                            AssignedToUserId = 4,
                            AssignmentState = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 14,
                            AssetCode = "PC000004",
                            AssignedByUserId = 1,
                            AssignedDate = new DateTime(2022, 8, 5, 15, 9, 43, 356, DateTimeKind.Local).AddTicks(3720),
                            AssignedToUserId = 4,
                            AssignmentState = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 15,
                            AssetCode = "PC000005",
                            AssignedByUserId = 1,
                            AssignedDate = new DateTime(2022, 8, 5, 15, 9, 43, 356, DateTimeKind.Local).AddTicks(3720),
                            AssignedToUserId = 4,
                            AssignmentState = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 16,
                            AssetCode = "PC000006",
                            AssignedByUserId = 1,
                            AssignedDate = new DateTime(2022, 8, 5, 15, 9, 43, 356, DateTimeKind.Local).AddTicks(3721),
                            AssignedToUserId = 4,
                            AssignmentState = 2,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Rookie.AssetManagement.DataAccessor.Entities.Category", b =>
                {
                    b.Property<string>("CategoryID")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = "LA",
                            CategoryName = "Laptop"
                        },
                        new
                        {
                            CategoryID = "MO",
                            CategoryName = "Monitor"
                        },
                        new
                        {
                            CategoryID = "PC",
                            CategoryName = "Personal Computer"
                        });
                });

            modelBuilder.Entity("Rookie.AssetManagement.DataAccessor.Entities.Location", b =>
                {
                    b.Property<string>("LocationID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationID");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationID = "HN",
                            LocationName = "Ha Noi"
                        },
                        new
                        {
                            LocationID = "HCM",
                            LocationName = "Ho Chi Minh"
                        });
                });

            modelBuilder.Entity("Rookie.AssetManagement.DataAccessor.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLogged")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffCode")
                        .HasMaxLength(6)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(6)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("LocationID");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d40b795a-8c36-43b1-b025-5e99ad3a8760",
                            CreatedDate = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1989, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Thong",
                            Gender = "F",
                            IsLogged = true,
                            JoinedDate = new DateTime(2015, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Nguyen Hoang",
                            LocationID = "HCM",
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedUserName = "thongnh",
                            PasswordHash = "AQAAAAEAACcQAAAAEFSf84fzwWriGTOkgZz7pjI3SsIiWJ7Ldqqub+1WLMmfrnePw2u0Sf8oenACyiH/zw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "NQLC7WE4A7DTOM5DETPA35OHKTOZMMYP",
                            StaffCode = "SD1001",
                            TwoFactorEnabled = false,
                            UserName = "thongnh"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3c08396a-576a-46d5-a5b8-6595ac4e5408",
                            CreatedDate = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1983, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Canh",
                            Gender = "M",
                            IsLogged = false,
                            JoinedDate = new DateTime(2018, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Ho Minh",
                            LocationID = "HCM",
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedUserName = "canhhm",
                            PasswordHash = "AQAAAAEAACcQAAAAEI8Cn5LC3Q2RCpWAigOwO705q1ztmn4o1qR7aa963ToLO2HXB23sfV/g+Y3ePjS2lA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "NQLC7NG4A7RTOM5DETPA35OHKTOZMMYP",
                            StaffCode = "SD1002",
                            TwoFactorEnabled = false,
                            UserName = "canhhm"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c6e3172e-ecb9-4201-8c6d-ff122f66e806",
                            CreatedDate = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1987, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Khanh",
                            Gender = "F",
                            IsLogged = false,
                            JoinedDate = new DateTime(2020, 12, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Nguyen Tran Bao",
                            LocationID = "HN",
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedUserName = "khanhntb",
                            PasswordHash = "AQAAAAEAACcQAAAAEIKOo5D4boKpVRh1dCdelyQlHVKCRlaz9rFNUKVoS6iVHKmQc349Jnh+I3Hqd7KMvQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "NQLC7NG4A7DTYM5DETPA35OHKTOZMMYP",
                            StaffCode = "SD1003",
                            TwoFactorEnabled = false,
                            UserName = "khanhntb"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cc2a8ca2-fab7-4dfd-912c-f61abb39bd4d",
                            CreatedDate = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1983, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Sang",
                            Gender = "F",
                            IsLogged = false,
                            JoinedDate = new DateTime(2018, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Nguyen Vinh",
                            LocationID = "HN",
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedUserName = "sangnv",
                            PasswordHash = "AQAAAAEAACcQAAAAELw148bV55ccKg26AzgVKtFyzRIs9C+XKDvW3MHlKVMgiY1zYorkXNemBiToeSRV8g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "NQLC7NG4A7DTOJ5DETPA35OHKTOZMMYP",
                            StaffCode = "SD1005",
                            TwoFactorEnabled = false,
                            UserName = "sangnv"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "84cff317-0743-4580-89a3-ca029cf8db91",
                            CreatedDate = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1980, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Nhut",
                            Gender = "M",
                            IsLogged = true,
                            JoinedDate = new DateTime(2020, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Tran Minh",
                            LocationID = "HN",
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedUserName = "nhattm",
                            PasswordHash = "AQAAAAEAACcQAAAAEGLh+KfDXqxSJIYIqLY1Q6XPiMR6K2QdfZ1gyeuL2MV45XEM1/jPHhE3f1h/TXZhOA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "NQLC7NG4R7DTOM5DETPA35OHKTOZMMYP",
                            StaffCode = "SD1006",
                            TwoFactorEnabled = false,
                            UserName = "nhattm"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "375ab57f-b3f3-44b2-8568-bbe877263081",
                            CreatedDate = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1987, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Van",
                            Gender = "F",
                            IsLogged = true,
                            JoinedDate = new DateTime(2016, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Nguyen Ngoc Gia",
                            LocationID = "HN",
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedUserName = "vannng",
                            PasswordHash = "AQAAAAEAACcQAAAAEKC1K8bOrNDy267ZIx1indiTeGQZk4IUCiM3kDDDqOYFApJiHJHYxNB5AUF12pusHw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "NQLC7NG4A7DTOM5DHTPA35OHKTOZMMYP",
                            StaffCode = "SD1007",
                            TwoFactorEnabled = false,
                            UserName = "Vannng"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bbe0dcc3-0193-4793-9e1b-76bd1cb0dcd8",
                            CreatedDate = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1987, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Thang",
                            Gender = "F",
                            IsLogged = false,
                            JoinedDate = new DateTime(2016, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Nguyen Viet",
                            LocationID = "HN",
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedUserName = "thangnv",
                            PasswordHash = "AQAAAAEAACcQAAAAEAkTLZufcL97V5r+otIB3jqh8ePBAgbYV6J0woKwueiFsTQwqzHdvLtl/H4SmDujcQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "NQLC7NG4A7DTOM5DETPA35OMKTOZMMYP",
                            StaffCode = "SD1008",
                            TwoFactorEnabled = false,
                            UserName = "thangnv"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0bfb1ae3-e2b2-426b-b0ef-3e06bf795258",
                            CreatedDate = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1984, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Toan",
                            Gender = "M",
                            IsLogged = false,
                            JoinedDate = new DateTime(2017, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Le Hang",
                            LocationID = "HCM",
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedUserName = "toanlh",
                            PasswordHash = "AQAAAAEAACcQAAAAEDU5ZYsMsBGWLtuXB6bCK6wQfgJFSNqKHn4aGiw8KN6SPb5IEJC3ZGIO0as9GbUUIQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "NQLC7NG4A7DTOM5DETPA35OHKTOZBMYP",
                            StaffCode = "SD1009",
                            TwoFactorEnabled = false,
                            UserName = "toanlh"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "76e53a80-5545-44cc-a436-4e1813cc67ba",
                            CreatedDate = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1981, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Quy",
                            Gender = "M",
                            IsLogged = false,
                            JoinedDate = new DateTime(2017, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Bui Duy",
                            LocationID = "HCM",
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedUserName = "quybd",
                            PasswordHash = "AQAAAAEAACcQAAAAEDBk56iEqriFim+ZRG5MjbM96LPclsl7DDAQhe1BI+6n+eAInAnZSMsBD5DBesjEgg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "NQLC7NG4A7DTOM5DETPA35OHKTOZMMYP",
                            StaffCode = "SD1010",
                            TwoFactorEnabled = false,
                            UserName = "quybd"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bd9022c4-a72a-4871-9c2f-af37c098ad46",
                            CreatedDate = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1986, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Phuong",
                            Gender = "F",
                            IsLogged = false,
                            JoinedDate = new DateTime(2018, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Vo Hoang",
                            LocationID = "HCM",
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedUserName = "phuongvh",
                            PasswordHash = "AQAAAAEAACcQAAAAEEYRh2hIbQRoVNAkGV48c1swodctqWtjPfxoa4kyVULLhxWb5EnzRI0NzXbdpdPBMA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "NQLC7NG4A7DTOM5DETPA35OHKTOWMMYP",
                            StaffCode = "SD1011",
                            TwoFactorEnabled = false,
                            UserName = "phuongvh"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Rookie.AssetManagement.DataAccessor.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Rookie.AssetManagement.DataAccessor.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rookie.AssetManagement.DataAccessor.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Rookie.AssetManagement.DataAccessor.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Rookie.AssetManagement.DataAccessor.Entities.Asset", b =>
                {
                    b.HasOne("Rookie.AssetManagement.DataAccessor.Entities.Category", "Category")
                        .WithMany("Assets")
                        .HasForeignKey("CategoryID");

                    b.HasOne("Rookie.AssetManagement.DataAccessor.Entities.Location", "Location")
                        .WithMany("Assets")
                        .HasForeignKey("LocationID");

                    b.Navigation("Category");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Rookie.AssetManagement.DataAccessor.Entities.Assignment", b =>
                {
                    b.HasOne("Rookie.AssetManagement.DataAccessor.Entities.Asset", "Asset")
                        .WithMany("Assignments")
                        .HasForeignKey("AssetCode");

                    b.HasOne("Rookie.AssetManagement.DataAccessor.Entities.User", "AssignedByUser")
                        .WithMany("AssignedBys")
                        .HasForeignKey("AssignedByUserId");

                    b.HasOne("Rookie.AssetManagement.DataAccessor.Entities.User", "AssignedToUser")
                        .WithMany("AssignedTos")
                        .HasForeignKey("AssignedToUserId");

                    b.Navigation("Asset");

                    b.Navigation("AssignedByUser");

                    b.Navigation("AssignedToUser");
                });

            modelBuilder.Entity("Rookie.AssetManagement.DataAccessor.Entities.User", b =>
                {
                    b.HasOne("Rookie.AssetManagement.DataAccessor.Entities.Location", "Location")
                        .WithMany("Users")
                        .HasForeignKey("LocationID");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Rookie.AssetManagement.DataAccessor.Entities.Asset", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("Rookie.AssetManagement.DataAccessor.Entities.Category", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("Rookie.AssetManagement.DataAccessor.Entities.Location", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Rookie.AssetManagement.DataAccessor.Entities.User", b =>
                {
                    b.Navigation("AssignedBys");

                    b.Navigation("AssignedTos");
                });
#pragma warning restore 612, 618
        }
    }
}
